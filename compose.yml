# https://ashwin9798.medium.com/nginx-with-docker-and-node-js-a-beginners-guide-434fe1216b6b

version: '3'

x-db-settings: &DB_SETTINGS
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_PORT: '5432'
  POSTGRES_HOST: db
  POSTGRES_DB_NAME: websocket_messages
  POSTGRES_COMMON_TABLE_NAME: stocks

services:
  nginx:
    image: nginx:latest
    ports:
      - '18080:80'
      - '18081:80'
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db_init:
    image: 'postgres:16.2'
    environment:
      << : *DB_SETTINGS
    command: sh -c "PGPASSWORD=$${POSTGRES_PASSWORD} psql -c \"create database $${POSTGRES_DB_NAME};\" -U $${POSTGRES_USER} -h db"

  db:
    image: 'postgres:16.2'
    environment:
      << : *DB_SETTINGS
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./postgresql/data16:/var/lib/postgresql/data:delegated
    ports:
      - '5432:5432'

  recorder:
    tty: true
    stdin_open: true
    build:
      context: ./recorder
    environment:
      PROTOCOL: $PROTOCOL
      HOST: $HOST
      PORT: $PORT
      WEBSOCKET_PATH: $WEBSOCKET_PATH
      STOCK_CODES: $STOCK_CODES
      << : *DB_SETTINGS
    volumes:
      - type: bind
        source: ./recorder
        target: /app
      - recorder-nodemodules:/app/node_modules
    command:
      - node
      - index.js
    depends_on: 
      - db

  # ダミーの値を流し続けるWebSocketサーバ
  socket_dummy:
    build:
      context: ./socket_dummy
    init: true
    ports:
     - '5002:5002'
    environment:
      - PORT=5002
    command:
      - node
      - index.js
    depends_on:
      - nginx

  # DBから取り出した値を流し続けるWebSocketサーバ
  socket_db:
    build:
      context: ./socket_db
    init: true
    ports:
     - '5002:5002'
    environment:
      STOCK_CODES: $STOCK_CODES
      << : *DB_SETTINGS
      PORT: 5002
    volumes:
      - /app/node_modules
      - ./socket_db:/app:cached
    command:
      - node
      - index.js
      - ${START_DATETIME:-2022-06-21T09:00:00}
    depends_on:
      - nginx

  token:
    build:
      context: ./token
    init: true
    ports:
     - '5001:5001'
    environment:
      - PORT=5001
      - HOST=lvh.me
    volumes:
      - /app/node_modules
      - ./token:/app:cached
    command:
      - node
      - index.js
    depends_on:
      - nginx

  export:
    build: .
    environment:
      << : *DB_SETTINGS
    volumes:
      - ./:/app

volumes:
  recorder-nodemodules:
    name: recorder-nodemodules